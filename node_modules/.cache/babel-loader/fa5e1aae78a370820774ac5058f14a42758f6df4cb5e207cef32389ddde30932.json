{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, Fragment as _Fragment, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Let's play a game!\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Chuck Norris Jokes\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache) {\n  const _component_myHeader = _resolveComponent(\"myHeader\");\n  const _component_RandomQuote = _resolveComponent(\"RandomQuote\");\n  const _component_GameAnswer = _resolveComponent(\"GameAnswer\");\n  const _component_ChuckQuoteGalery = _resolveComponent(\"ChuckQuoteGalery\");\n  const _component_myFooter = _resolveComponent(\"myFooter\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_myHeader)]), _createElementVNode(\"div\", null, [_hoisted_1, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => _ctx.getRandomQuote && _ctx.getRandomQuote(...args))\n  }, \"Get Quote\"), _ctx.RandomQuote ? (_openBlock(), _createBlock(_component_RandomQuote, {\n    key: 0,\n    quote: _ctx.RandomQuote\n  }, null, 8 /* PROPS */, [\"quote\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.answer = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.answer]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => _ctx.checkAnswer && _ctx.checkAnswer(...args))\n  }, \"Get Answer\"), _ctx.showResult ? (_openBlock(), _createBlock(_component_GameAnswer, {\n    key: 0,\n    answer: _ctx.result\n  }, null, 8 /* PROPS */, [\"answer\"])) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => _ctx.getChuckQuote && _ctx.getChuckQuote(...args))\n  }, \"Get Quote\"), _ctx.ChuckQuote ? (_openBlock(), _createBlock(_component_ChuckQuoteGalery, {\n    key: 0,\n    quote: _ctx.ChuckQuote,\n    author: \"Chuck Norris\"\n  }, null, 8 /* PROPS */, [\"quote\"])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" <div>\\n    <h1>Donald Trump Jokes</h1>\\n    <button @click=\\\"getTrumpQuote\\\">Get Quote</button>\\n    <TrumpQuote v-if=\\\"TrumpQuote\\\" :quote=\\\"TrumpQuote\\\" author=\\\"Donald Trump\\\" />\\n  </div> \"), _createElementVNode(\"div\", null, [_createVNode(_component_myFooter)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";gCAMIA,oBAA2B,YAAvB,oBAAkB;gCAYtBA,oBAA2B,YAAvB,oBAAkB;;;;;;;;6DAjBxBA,oBAEM,cADJC,aAAYC,wBAGdF,oBAIM,cAHJG,UAA2B,EAC3BH,oBAAkD;IAAzCI,OAAK,yCAAEC,mDAAc;KAAE,WAAS,GACtBA,gBAAW,kBAA9BC,aAAuDC;;IAAtBC,KAAK,EAAEH;6EAG1CL,oBAIM,8BAHJA,oBAAsC;IAA/BS,IAAI,EAAC,MAAM;+DAAUJ,WAAM;iDAANA,WAAM,KAClCL,oBAAgD;IAAvCI,OAAK,yCAAEC,6CAAW;KAAE,YAAU,GACrBA,eAAU,kBAA5BC,aAAiDI;;IAAlBC,MAAM,EAAEN;8EAGzCL,oBAQM,cAPJY,UAA2B,EAC3BZ,oBAAiD;IAAxCI,OAAK,yCAAEC,iDAAa;KAAE,WAAS,GAEhCA,eAAU,kBADlBC,aAIEO;;IAFCL,KAAK,EAAEH,eAAU;IAClBS,MAAM,EAAC;6EAIXC,wNAIU,EAEVf,oBAEM,cADJC,aAAYe","names":["_createElementVNode","_createVNode","_component_myHeader","_hoisted_1","onClick","_ctx","_createBlock","_component_RandomQuote","quote","type","_component_GameAnswer","answer","_hoisted_2","_component_ChuckQuoteGalery","author","_createCommentVNode","_component_myFooter"],"sourceRoot":"","sources":["/Users/aureliendroissart/Documents/IMAC/WEB/webproject/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <myHeader />\n  </div>\n\n  <div>\n    <h1>Let's play a game!</h1>\n    <button @click=\"getRandomQuote\">Get Quote</button>\n    <RandomQuote v-if=\"RandomQuote\" :quote=\"RandomQuote\" />\n  </div>\n\n  <div>\n    <input type=\"text\" v-model=\"answer\" />\n    <button @click=\"checkAnswer\">Get Answer</button>\n    <GameAnswer v-if=\"showResult\" :answer=\"result\" />\n  </div>\n\n  <div>\n    <h1>Chuck Norris Jokes</h1>\n    <button @click=\"getChuckQuote\">Get Quote</button>\n    <ChuckQuoteGalery\n      v-if=\"ChuckQuote\"\n      :quote=\"ChuckQuote\"\n      author=\"Chuck Norris\"\n    />\n  </div>\n\n  <!-- <div>\n    <h1>Donald Trump Jokes</h1>\n    <button @click=\"getTrumpQuote\">Get Quote</button>\n    <TrumpQuote v-if=\"TrumpQuote\" :quote=\"TrumpQuote\" author=\"Donald Trump\" />\n  </div> -->\n\n  <div>\n    <myFooter />\n  </div>\n</template>\n\n<script>\nimport ChuckQuoteGalery from \"./components/ChuckQuoteGalery.vue\";\nimport ChuckQuote from \"./components/ChuckQuote.vue\";\n// import TrumpQuote from \"./components/TrumpQuote.vue\";\nimport RandomQuote from \"./components/RandomQuote.vue\";\nimport getChuckNorrisQuote from \"@/service/ChuckNorrisAPI\";\nimport getDonaldTrumpQuote from \"@/service/DonaldTrumpAPI\";\nimport GameAnswer from \"./components/GameAnswer.vue\";\nimport myHeader from \"./components/myHeader.vue\";\nimport myFooter from \"./components/myFooter.vue\";\nimport ChuckQuoteGalery from \"./components/ChuckQuoteGalery.vue\";\n\nexport default {\n  components: {\n    RandomQuote,\n    ChuckQuote,\n    // TrumpQuote,\n    GameAnswer,\n    myHeader,\n    myFooter,\n    ChuckQuoteGalery,\n  },\n  data() {\n    return {\n      ChuckQuote: \"\",\n      // TrumpQuote: \"\",\n      RandomQuote: \"\",\n      RandomAuthor: \"\",\n      result: \"\",\n      answer: \"\",\n      showResult: false,\n      choix: \"trump\",\n    };\n  },\n\n  methods: {\n    async getChuckQuote() {\n      this.ChuckQuote = await getChuckNorrisQuote();\n    },\n\n    // async getTrumpQuote() {\n    //   this.TrumpQuote = await getDonaldTrumpQuote();\n    // },\n\n    async getRandomQuote() {\n      const randomNum = Math.random();\n      if (randomNum < 0.5) {\n        this.RandomQuote = await getDonaldTrumpQuote();\n        this.RandomAuthor = \"Donald Trump\";\n      } else {\n        this.RandomQuote = await getChuckNorrisQuote();\n        this.RandomAuthor = \"Chuck Norris\";\n      }\n    },\n    checkAnswer() {\n      const author = this.RandomAuthor;\n      const answer = this.answer.trim();\n      if (answer.toLowerCase() === author.toLowerCase()) {\n        this.result = \"Correct!\";\n      } else {\n        this.result = `Wrong! It was said by ${author}`;\n      }\n      this.showResult = true;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}