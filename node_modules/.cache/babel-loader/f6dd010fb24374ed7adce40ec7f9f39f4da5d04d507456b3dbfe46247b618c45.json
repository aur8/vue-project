{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quote-gallery\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Welcome to the hall of the most uncommon fun facts !\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"random\"\n}, \"Random Quotes\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"animal\"\n}, \"Animal Quotes\", -1 /* HOISTED */);\nconst _hoisted_5 = [_hoisted_3, _hoisted_4];\nconst _hoisted_6 = {\n  key: 0\n};\nconst _hoisted_7 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChuckQuote = _resolveComponent(\"ChuckQuote\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.changeCategory && $options.changeCategory(...args))\n  }, \"Get Quote\"), _createCommentVNode(\" <ChuckQuote v-for=\\\"quote in quotes\\\" :key=\\\"quote.id\\\" :quote=\\\"quote\\\" /> \"), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedCategory = $event),\n    onChange: _cache[2] || (_cache[2] = (...args) => $options.changeCategory && $options.changeCategory(...args))\n  }, _hoisted_5, 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.selectedCategory]]), $data.selectedCategory === 'random' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.quotes, quote => {\n    return _openBlock(), _createBlock(_component_ChuckQuote, {\n      key: quote.id,\n      quote: quote\n    }, null, 8 /* PROPS */, [\"quote\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true), $data.selectedCategory === 'animal' ? (_openBlock(), _createElementBlock(\"div\", _hoisted_7, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.quotes, quote => {\n    return _openBlock(), _createBlock(_component_ChuckQuote, {\n      key: quote.id,\n      quote: quote\n    }, null, 8 /* PROPS */, [\"quote\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAe;gCACxBC,oBAA6D,YAAzD,sDAAoD;gCAItDA,oBAA6C;EAArCC,KAAK,EAAC;AAAQ,GAAC,eAAa;gCACpCD,oBAA6C;EAArCC,KAAK,EAAC;AAAQ,GAAC,eAAa;oBADpCC,UAA6C,EAC7CC,UAA6C;;;;;;;;;uBANjDC,oBAcM,OAdNC,UAcM,GAbJC,UAA6D,EAC7DN,oBAAkD;IAAzCO,OAAK,yCAAEC,2DAAc;KAAE,WAAS,GACzCC,oGAA8E,kBAC9ET,oBAGS;+DAHQU,sBAAgB;IAAGC,QAAM,yCAAEH,2DAAc;yEAAzCE,sBAAgB,KAItBA,sBAAgB,+BAA3BN,oBAEM,uCADJA,oBAAqEQ,6BAAzCF,YAAM,EAAfG,KAAK;yBAAxBC,aAAqEC;MAAhCC,GAAG,EAAEH,KAAK,CAACI,EAAE;MAAGJ,KAAK,EAAEA;;yEAEnDH,sBAAgB,+BAA3BN,oBAEM,uCADJA,oBAAqEQ,6BAAzCF,YAAM,EAAfG,KAAK;yBAAxBC,aAAqEC;MAAhCC,GAAG,EAAEH,KAAK,CAACI,EAAE;MAAGJ,KAAK,EAAEA","names":["class","_createElementVNode","value","_hoisted_3","_hoisted_4","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","_createCommentVNode","$data","onChange","_Fragment","quote","_createBlock","_component_ChuckQuote","key","id"],"sourceRoot":"","sources":["/Users/aureliendroissart/Documents/IMAC/WEB/webproject/src/components/ChuckQuoteGallery.vue"],"sourcesContent":["<template>\n  <div class=\"quote-gallery\">\n    <h3>Welcome to the hall of the most uncommon fun facts !</h3>\n    <button @click=\"changeCategory\">Get Quote</button>\n    <!-- <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" /> -->\n    <select v-model=\"selectedCategory\" @change=\"changeCategory\">\n      <option value=\"random\">Random Quotes</option>\n      <option value=\"animal\">Animal Quotes</option>\n    </select>\n    <div v-if=\"selectedCategory === 'random'\">\n      <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" />\n    </div>\n    <div v-if=\"selectedCategory === 'animal'\">\n      <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" />\n    </div>\n  </div>\n</template>\n\n<script>\nimport ChuckQuote from \"./ChuckQuote.vue\";\nimport {\n  getChuckNorrisQuote,\n  getChuckNorrisCategoryQuote,\n} from \"@/service/ChuckNorrisAPI\";\n\nexport default {\n  name: \"ChuckQuoteGallery\",\n\n  components: {\n    ChuckQuote,\n  },\n\n  data() {\n    return {\n      quotes: [],\n      selectedCategory: \"random\",\n    };\n  },\n\n  methods: {\n    // async getChuckQuote() {\n    //   const quote = await getChuckNorrisQuote();\n    //   this.quotes.push(quote);\n    // },\n\n    // async getChuckQuoteCategory(category) {\n    //   const quote = await getChuckNorrisCategoryQuote(category);\n    //   this.quotes.push(quote);\n    // },\n\n    async changeCategory(selectedCategory) {\n      if (selectedCategory === \"random\") {\n        const quote = await getChuckNorrisQuote();\n        this.quotes.push(quote);\n      } else {\n        const quote = await getChuckNorrisCategoryQuote(selectedCategory);\n        this.quotes.push(quote);\n      }\n    },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}