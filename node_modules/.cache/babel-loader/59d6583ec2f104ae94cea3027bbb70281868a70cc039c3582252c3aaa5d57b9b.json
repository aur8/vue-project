{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createBlock as _createBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"quote-gallery\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Welcome to the hall of the most uncommon fun facts !\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ChuckQuote = _resolveComponent(\"ChuckQuote\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.getChuckQuote && $options.getChuckQuote(...args))\n  }, \"Get Quote\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.quotes, quote => {\n    return _openBlock(), _createBlock(_component_ChuckQuote, {\n      key: quote.id,\n      quote: quote\n    }, null, 8 /* PROPS */, [\"quote\"]);\n  }), 128 /* KEYED_FRAGMENT */)), _createCommentVNode(\" J'ai voulu créer une fonction permettant d'affficher des quotes selon des catégories seulement l'API ne propose plus ce service je présenterai ce problème dans la vidéo \"), _createCommentVNode(\" <button @click=\\\"changeCategory\\\">Get Quote</button> \"), _createCommentVNode(\" <select v-model=\\\"selectedCategory\\\" @change=\\\"changeCategory\\\">\\n      <option value=\\\"random\\\">Random Quotes</option>\\n      <option value=\\\"animal\\\">Animal Quotes</option>\\n    </select>\\n    <div v-if=\\\"selectedCategory === 'random'\\\">\\n      <ChuckQuote v-for=\\\"quote in quotes\\\" :key=\\\"quote.id\\\" :quote=\\\"quote\\\" />\\n    </div>\\n    <div v-if=\\\"selectedCategory === 'animal'\\\">\\n      <ChuckQuote v-for=\\\"quote in quotes\\\" :key=\\\"quote.id\\\" :quote=\\\"quote\\\" />\\n    </div> \")]);\n}","map":{"version":3,"mappings":";;EACOA,KAAK,EAAC;AAAe;gCACxBC,oBAA6D,YAAzD,sDAAoD;;;;uBAD1DC,oBAiBM,OAjBNC,UAiBM,GAhBJC,UAA6D,EAC7DH,oBAAiD;IAAxCI,OAAK,yCAAEC,yDAAa;KAAE,WAAS,sBACxCJ,oBAAqEK,6BAAzCC,YAAM,EAAfC,KAAK;yBAAxBC,aAAqEC;MAAhCC,GAAG,EAAEH,KAAK,CAACI,EAAE;MAAGJ,KAAK,EAAEA;;kCAE5DK,iMAAiL,EACjLA,6EAA2D,EAC3DA,wfASU","names":["class","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","onClick","$options","_Fragment","$data","quote","_createBlock","_component_ChuckQuote","key","id","_createCommentVNode"],"sourceRoot":"","sources":["/Users/aureliendroissart/Documents/IMAC/vue-project/src/components/ChuckQuoteGallery.vue"],"sourcesContent":["<template>\n  <div class=\"quote-gallery\">\n    <h3>Welcome to the hall of the most uncommon fun facts !</h3>\n    <button @click=\"getChuckQuote\">Get Quote</button>\n    <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" />\n\n    <!-- J'ai voulu créer une fonction permettant d'affficher des quotes selon des catégories seulement l'API ne propose plus ce service je présenterai ce problème dans la vidéo -->\n    <!-- <button @click=\"changeCategory\">Get Quote</button> -->\n    <!-- <select v-model=\"selectedCategory\" @change=\"changeCategory\">\n      <option value=\"random\">Random Quotes</option>\n      <option value=\"animal\">Animal Quotes</option>\n    </select>\n    <div v-if=\"selectedCategory === 'random'\">\n      <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" />\n    </div>\n    <div v-if=\"selectedCategory === 'animal'\">\n      <ChuckQuote v-for=\"quote in quotes\" :key=\"quote.id\" :quote=\"quote\" />\n    </div> -->\n  </div>\n</template>\n\n<script>\nimport ChuckQuote from \"./ChuckQuote.vue\";\nimport getChuckNorrisQuote from \"@/service/ChuckNorrisAPI\";\n\nexport default {\n  name: \"ChuckQuoteGallery\",\n\n  components: {\n    ChuckQuote,\n  },\n\n  data() {\n    return {\n      quotes: [],\n      // selectedCategory: \"random\",\n    };\n  },\n\n  methods: {\n    async getChuckQuote() {\n      const quote = await getChuckNorrisQuote();\n      this.quotes.push(quote);\n    },\n\n    // async changeCategory(selectedCategory) {\n    //   if (selectedCategory === \"random\") {\n    //     const quote = await getChuckNorrisQuote();\n    //     this.quotes.push(quote);\n    //   } else {\n    //     const quote = await getChuckNorrisCategoryQuote(selectedCategory);\n    //     this.quotes.push(quote);\n    //   }\n    // },\n  },\n};\n</script>\n\n<style></style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}