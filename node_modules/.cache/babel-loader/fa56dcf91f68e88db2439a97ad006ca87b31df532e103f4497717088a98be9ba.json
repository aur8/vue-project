{"ast":null,"code":"import ChuckQuote from \"./components/ChuckQuote.vue\";\n// import TrumpQuote from \"./components/TrumpQuote.vue\";\n// import RandomQuote from \"./components/RandomQuote.vue\";\nimport getChuckNorrisQuote from \"@/service/ChuckNorrisAPI\";\nimport getDonaldTrumpQuote from \"@/service/DonaldTrumpAPI\";\nimport GameAnswer from \"./components/GameAnswer.vue\";\nexport default {\n  components: {\n    RandomQuote,\n    ChuckQuote,\n    TrumpQuote,\n    GameAnswer\n  },\n  data() {\n    return {\n      // ChuckQuote: \"\",\n      // TrumpQuote: \"\",\n      RandomQuote: \"\",\n      RandomAuthor: \"\",\n      result: \"\",\n      answer: \"\",\n      showResult: false\n    };\n  },\n  methods: {\n    // async getChuckQuote() {\n    //   this.ChuckQuote = await getChuckNorrisQuote();\n    // },\n\n    // async getTrumpQuote() {\n    //   this.TrumpQuote = await getDonaldTrumpQuote();\n    // },\n\n    async getRandomQuote() {\n      const randomNum = Math.random();\n      if (randomNum < 0.5) {\n        this.RandomQuote = await getDonaldTrumpQuote();\n        this.RandomAuthor = \"Donald Trump\";\n      } else {\n        this.RandomQuote = await getChuckNorrisQuote();\n        this.RandomAuthor = \"Chuck Norris\";\n      }\n    },\n    checkAnswer() {\n      const author = this.RandomAuthor;\n      const answer = this.answer.trim();\n      if (answer.toLowerCase() === author.toLowerCase()) {\n        this.result = \"Correct!\";\n      } else {\n        this.result = `Wrong! It was said by ${author}`;\n      }\n      this.showResult = true;\n    }\n  }\n};","map":{"version":3,"mappings":"AAwCA,OAAOA,UAAS,MAAO,6BAA6B;AACpD;AACA;AACA,OAAOC,mBAAkB,MAAO,0BAA0B;AAC1D,OAAOC,mBAAkB,MAAO,0BAA0B;AAC1D,OAAOC,UAAS,MAAO,6BAA6B;AAEpD,eAAe;EACbC,UAAU,EAAE;IACVC,WAAW;IACXL,UAAU;IACVM,UAAU;IACVH;EACF,CAAC;EACDI,IAAI,GAAG;IACL,OAAO;MACL;MACA;MACAF,WAAW,EAAE,EAAE;MACfG,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,EAAE;MACVC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE;IACd,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP;IACA;IACA;;IAEA;IACA;IACA;;IAEA,MAAMC,cAAc,GAAG;MACrB,MAAMC,SAAQ,GAAIC,IAAI,CAACC,MAAM,EAAE;MAC/B,IAAIF,SAAQ,GAAI,GAAG,EAAE;QACnB,IAAI,CAACT,WAAU,GAAI,MAAMH,mBAAmB,EAAE;QAC9C,IAAI,CAACM,YAAW,GAAI,cAAc;MACpC,OAAO;QACL,IAAI,CAACH,WAAU,GAAI,MAAMJ,mBAAmB,EAAE;QAC9C,IAAI,CAACO,YAAW,GAAI,cAAc;MACpC;IACF,CAAC;IACDS,WAAW,GAAG;MACZ,MAAMC,MAAK,GAAI,IAAI,CAACV,YAAY;MAChC,MAAME,MAAK,GAAI,IAAI,CAACA,MAAM,CAACS,IAAI,EAAE;MACjC,IAAIT,MAAM,CAACU,WAAW,EAAC,KAAMF,MAAM,CAACE,WAAW,EAAE,EAAE;QACjD,IAAI,CAACX,MAAK,GAAI,UAAU;MAC1B,OAAO;QACL,IAAI,CAACA,MAAK,GAAK,yBAAwBS,MAAO,EAAC;MACjD;MACA,IAAI,CAACP,UAAS,GAAI,IAAI;IACxB;EACF;AACF,CAAC","names":["ChuckQuote","getChuckNorrisQuote","getDonaldTrumpQuote","GameAnswer","components","RandomQuote","TrumpQuote","data","RandomAuthor","result","answer","showResult","methods","getRandomQuote","randomNum","Math","random","checkAnswer","author","trim","toLowerCase"],"sourceRoot":"","sources":["/Users/aureliendroissart/Documents/IMAC/WEB/webproject/src/App.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <div class=\"columns\">\n      <img\n        alt=\"Vue logo\"\n        src=\"./assets/chuck-norris-61703b88d77ab.jpg\"\n        style=\"width: 50%\"\n      />\n    </div>\n    <div class=\"columns\">\n      <img alt=\"Vue logo\" src=\"./assets/adsgads.jpg\" style=\"width: 50%\" />\n    </div>\n  </div>\n\n  <div>\n    <h1>Let's play a game!</h1>\n    <button @click=\"getRandomQuote\">Get Quote</button>\n    <RandomQuote v-if=\"RandomQuote\" :quote=\"RandomQuote\" />\n  </div>\n\n  <div>\n    <input type=\"text\" v-model=\"answer\" />\n    <button @click=\"checkAnswer\">Get Answer</button>\n    <GameAnswer v-if=\"showResult\" :answer=\"result\" />\n  </div>\n\n  <!-- <div>\n    <h1>Chuck Norris Jokes</h1>\n    <button @click=\"getChuckQuote\">Get Quote</button>\n    <ChuckQuote v-if=\"ChuckQuote\" :quote=\"ChuckQuote\" author=\"Chuck Norris\" />\n  </div>\n\n  <div>\n    <h1>Donald Trump Jokes</h1>\n    <button @click=\"getTrumpQuote\">Get Quote</button>\n    <TrumpQuote v-if=\"TrumpQuote\" :quote=\"TrumpQuote\" author=\"Donald Trump\" />\n  </div> -->\n</template>\n\n<script>\nimport ChuckQuote from \"./components/ChuckQuote.vue\";\n// import TrumpQuote from \"./components/TrumpQuote.vue\";\n// import RandomQuote from \"./components/RandomQuote.vue\";\nimport getChuckNorrisQuote from \"@/service/ChuckNorrisAPI\";\nimport getDonaldTrumpQuote from \"@/service/DonaldTrumpAPI\";\nimport GameAnswer from \"./components/GameAnswer.vue\";\n\nexport default {\n  components: {\n    RandomQuote,\n    ChuckQuote,\n    TrumpQuote,\n    GameAnswer,\n  },\n  data() {\n    return {\n      // ChuckQuote: \"\",\n      // TrumpQuote: \"\",\n      RandomQuote: \"\",\n      RandomAuthor: \"\",\n      result: \"\",\n      answer: \"\",\n      showResult: false,\n    };\n  },\n  methods: {\n    // async getChuckQuote() {\n    //   this.ChuckQuote = await getChuckNorrisQuote();\n    // },\n\n    // async getTrumpQuote() {\n    //   this.TrumpQuote = await getDonaldTrumpQuote();\n    // },\n\n    async getRandomQuote() {\n      const randomNum = Math.random();\n      if (randomNum < 0.5) {\n        this.RandomQuote = await getDonaldTrumpQuote();\n        this.RandomAuthor = \"Donald Trump\";\n      } else {\n        this.RandomQuote = await getChuckNorrisQuote();\n        this.RandomAuthor = \"Chuck Norris\";\n      }\n    },\n    checkAnswer() {\n      const author = this.RandomAuthor;\n      const answer = this.answer.trim();\n      if (answer.toLowerCase() === author.toLowerCase()) {\n        this.result = \"Correct!\";\n      } else {\n        this.result = `Wrong! It was said by ${author}`;\n      }\n      this.showResult = true;\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n/* Three image containers (use 25% for four, and 50% for two, etc) */\n.column {\n  float: left;\n  width: 50%;\n  padding: 5px;\n}\n\n/* Clear floats after image containers */\n.row::after {\n  content: \"\";\n  clear: both;\n  display: table;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}