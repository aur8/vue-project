{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_myHeader = _resolveComponent(\"myHeader\");\n  const _component_RandomQuote = _resolveComponent(\"RandomQuote\");\n  const _component_ToggleGallery = _resolveComponent(\"ToggleGallery\");\n  const _component_myFooter = _resolveComponent(\"myFooter\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", null, [_createVNode(_component_myHeader)]), _createElementVNode(\"div\", null, [_createVNode(_component_RandomQuote)]), _createCommentVNode(\" <div>\\n    <h1>Let's play a game!</h1>\\n    <button @click=\\\"getRandomQuote\\\">Get Quote</button>\\n    <RandomQuote v-if=\\\"RandomQuote\\\" :quote=\\\"RandomQuote\\\" />\\n  </div>\\n\\n  <div>\\n    <input type=\\\"text\\\" v-model=\\\"answer\\\" />\\n    <button @click=\\\"checkAnswer\\\">Get Answer</button>\\n    <GameAnswer v-if=\\\"showResult\\\" :answer=\\\"result\\\" />\\n  </div> \"), _createElementVNode(\"div\", null, [_createVNode(_component_ToggleGallery)]), _createCommentVNode(\" <div>\\n    <h1>Chuck Norris Jokes</h1>\\n    <ChuckQuoteGallery />\\n  </div> \"), _createElementVNode(\"div\", null, [_createVNode(_component_myFooter)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;6DACEA,oBAEM,cADJC,aAAYC,wBAGdF,oBAEM,cADJC,aAAeE,2BAGjBC,4XAUU,EAEVJ,oBAEM,cADJC,aAAiBI,6BAGnBD,oGAGU,EAEVJ,oBAEM,cADJC,aAAYK","names":["_createElementVNode","_createVNode","_component_myHeader","_component_RandomQuote","_createCommentVNode","_component_ToggleGallery","_component_myFooter"],"sourceRoot":"","sources":["/Users/aureliendroissart/Documents/IMAC/WEB/webproject/src/App.vue"],"sourcesContent":["<template>\n  <div>\n    <myHeader />\n  </div>\n\n  <div>\n    <RandomQuote />\n  </div>\n\n  <!-- <div>\n    <h1>Let's play a game!</h1>\n    <button @click=\"getRandomQuote\">Get Quote</button>\n    <RandomQuote v-if=\"RandomQuote\" :quote=\"RandomQuote\" />\n  </div>\n\n  <div>\n    <input type=\"text\" v-model=\"answer\" />\n    <button @click=\"checkAnswer\">Get Answer</button>\n    <GameAnswer v-if=\"showResult\" :answer=\"result\" />\n  </div> -->\n\n  <div>\n    <ToggleGallery />\n  </div>\n\n  <!-- <div>\n    <h1>Chuck Norris Jokes</h1>\n    <ChuckQuoteGallery />\n  </div> -->\n\n  <div>\n    <myFooter />\n  </div>\n</template>\n\n<script>\n// import RandomQuote from \"./components/RandomQuote.vue\";\n// import getChuckNorrisQuote from \"@/service/ChuckNorrisAPI\";\n// import getDonaldTrumpQuote from \"@/service/DonaldTrumpAPI\";\n// import GameAnswer from \"./components/GameAnswer.vue\";\nimport myHeader from \"./components/myHeader.vue\";\nimport myFooter from \"./components/myFooter.vue\";\nimport ToggleGallery from \"./components/ToggleGallery.vue\";\nimport RandomQuote from \"./components/RandomQuote.vue\";\n\nexport default {\n  components: {\n    // RandomQuote,\n    // GameAnswer,\n    myHeader,\n    myFooter,\n    ToggleGallery,\n    RandomQuote,\n  },\n\n  // data() {\n  //   return {\n  //     RandomQuote: \"\",\n  //     RandomAuthor: \"\",\n  //     result: \"\",\n  //     answer: \"\",\n  //     showResult: false,\n  //   };\n  // },\n\n  // methods: {\n  //   async getRandomQuote() {\n  //     const randomNum = Math.random();\n  //     if (randomNum < 0.5) {\n  //       this.RandomQuote = await getDonaldTrumpQuote();\n  //       this.RandomAuthor = \"Donald Trump\";\n  //     } else {\n  //       this.RandomQuote = await getChuckNorrisQuote();\n  //       this.RandomAuthor = \"Chuck Norris\";\n  //     }\n  //   },\n  //   checkAnswer() {\n  //     const author = this.RandomAuthor;\n  //     const answer = this.answer.trim();\n  //     if (answer.toLowerCase() === author.toLowerCase()) {\n  //       this.result = \"Correct!\";\n  //     } else {\n  //       this.result = `Wrong! It was said by ${author}`;\n  //     }\n  //     this.showResult = true;\n  //   },\n  // },\n};\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}